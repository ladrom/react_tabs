{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","title","classNames","href","onClick","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"8LASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBACE,UAAQ,MAERF,UAAWG,IAAW,CAAE,YAAaJ,IAAOL,IAH9C,SAKE,mBACEU,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,WACHN,IAAOL,GACTC,EAAcG,IALpB,SASGI,KAZEH,UAoBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYU,cCxCRb,G,kBAAO,CAClB,CAAEM,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,iBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASf,EAAK,IAAxD,mBAAOC,EAAP,KAAsBe,EAAtB,KAMA,OACE,sBAAKT,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBN,EAAcQ,SAGpC,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeA,EAAcK,GAC7BJ,cAbgB,SAACG,GACrBW,EAAiBX,IAab,UAAQ,oBC3BhBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8c3fef01.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                data-cy=\"Tab\"\n                key={id}\n                className={classNames({ 'is-active': id === selectedTabId })}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (id !== selectedTabId) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0]);\n\n  const onTabSelected = (tab: Tab): void => {\n    setSelectedTabId(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabId.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId.id}\n        onTabSelected={onTabSelected}\n        data-cy=\"tab-content\"\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}